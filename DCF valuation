import yfinance as yf
import numpy as np

# Function to calculate Discounted Cash Flow (DCF) and Fair Value per Share
def calculate_dcf_fair_value(ticker_symbol, discount_rate=0.08, perpetual_growth_rate=0.04, fcf_growth_rate=0.10):
    # Fetch the stock data
    stock = yf.Ticker(ticker_symbol)

    # Get financial statements
    cash_flow_statement_df = stock.cashflow.transpose()

    # Fetch key metrics
    try:
        shares_outstanding = stock.info['sharesOutstanding']
        total_debt = stock.info['totalDebt']
        cash = stock.info['totalCash']
    except KeyError:
        print("Some required information is missing from Yahoo Finance.")
        return

    # Get the Free Cash Flow (FCF) for the last 4 years
    fcf = cash_flow_statement_df['Free Cash Flow'].dropna().values[:4]  # Only get the last 4 years

    # If insufficient data, display an error
    if len(fcf) < 4:
        print(f"Insufficient Free Cash Flow data for {ticker_symbol}.")
        return

    # Forecast future FCF based on the adjusted growth rate
    avg_fcf = np.mean(fcf)
    forecasted_fcfs = [avg_fcf * (1 + fcf_growth_rate)**i for i in range(1, 6)]

    # Terminal value using perpetual growth model (adjusted growth rate)
    terminal_value = forecasted_fcfs[-1] * (1 + perpetual_growth_rate) / (discount_rate - perpetual_growth_rate)

    # Discount future cash flows to present value
    discounted_fcfs = [fcf / (1 + discount_rate)**i for i, fcf in enumerate(forecasted_fcfs, start=1)]
    discounted_terminal_value = terminal_value / (1 + discount_rate)**5

    # Enterprise Value (sum of discounted cash flows and discounted terminal value)
    enterprise_value = sum(discounted_fcfs) + discounted_terminal_value

    # Calculate Equity Value (Enterprise Value - Net Debt)
    net_debt = total_debt - cash
    equity_value = enterprise_value - net_debt

    # Fair value per share
    fair_value_per_share = equity_value / shares_outstanding

    # Print results
    print(f"Enterprise Value (Present Value of all future cash flows): ${enterprise_value:,.2f}")
    print(f"Equity Value (Enterprise Value minus Net Debt): ${equity_value:,.2f}")
    print(f"Fair Value per Share: ${fair_value_per_share:,.2f}")

# Define the ticker symbol (e.g., 'AAPL' or 'NVDA')
ticker_symbol = 'GOOG'

# Run the DCF calculation and print the fair value per share
calculate_dcf_fair_value(ticker_symbol)
